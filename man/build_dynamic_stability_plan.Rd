% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_plans.R
\name{build_dynamic_stability_plan}
\alias{build_dynamic_stability_plan}
\title{Create a drake plan for dynamic stability analysis}
\usage{
build_dynamic_stability_plan(block, max_E = 16, E_list = seq(max_E),
  surrogate_method = "annual_spline", num_surr = 200,
  surr_params = list(), lib_sizes = seq(10, 100, by = 10),
  random_libs = TRUE, num_samples = 100, replace = TRUE,
  RNGseed = 42, silent = TRUE)
}
\arguments{
\item{block}{a data.frame containing time series for the community. Each
column is a time series of abundances.}

\item{max_E}{largest E to examine using simplex projection; this sets the
default range for `E_list`, but any setting for `E_list` will override the
value for `max_E`}

\item{E_list}{the embedding dimension or range of embedding dimensions to
search over.}

\item{surrogate_method}{which surrogate method to use: 
options are "annual_spline" or methods available in 
\code{\link[rEDM]{make_surrogate_data}}}

\item{num_surr}{number of surrogates to compute}

\item{surr_params}{a list of named optional arguments to be passed into the 
surrogate data function}

\item{lib_sizes}{the vector of library sizes to try}

\item{random_libs}{indicates whether to use randomly sampled libs}

\item{num_samples}{is the number of random samples at each lib size (this 
parameter is ignored if random_libs is FALSE)}

\item{replace}{indicates whether to sample vectors with replacement}

\item{RNGseed}{will set a seed for the random number generator, enabling 
reproducible runs of ccm with randomly generated libraries}

\item{silent}{prevents warning messages from being printed to the R console}
}
\description{
Create a drake plan to perform dynamic stability analysis on 
  community time series data:
  (1) run simplex projection on each time series to identify the optimal
      embedding dimension
  (2) generate surrogate time series, assumming that the data have just a
      seasonal pattern
  (3) run ccm on each pairwise interaction, including the surrogate data
  (4) identify the significant interactions by comparing the CCM for the real
      time series against the calculations for the surrogate data
  (5) run S-map models for each time series, using the appropriate number of
      lags, and including the important interacting variables
  (6) extract out the s-map coefficients from the models and assemble
      matrices for the system
  (7) perform eigen-decomposition on the s-map coefficient matrices
}
